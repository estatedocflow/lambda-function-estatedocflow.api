# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
  
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build and Publish Document.Create
      run: |
        cd Document.Create/src/Document.Create
        dotnet build --configuration Release --no-restore
        dotnet publish --configuration Release --output ./publish
        cd publish
        zip -r Document.Create.zip .
        mv Document.Create.zip ../../../../Document.Create.zip

    - name: Deploy Document.Create to AWS Lambda
      uses: appleboy/lambda-action@v0.2.0
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_SECRET_REGION }}
        function_name: estate-doc-flow-create-document
        zip_file: ./Document.Create.zip
        
    - name: Build and Publish Document.Get
      run: |
        cd Document.Get/src/Document.Get
        dotnet build --configuration Release --no-restore
        dotnet publish --configuration Release --output ./publish
        cd publish
        zip -r Document.Get.zip .
        mv Document.Get.zip ../../../../Document.Get.zip

    - name: Deploy Document.Get to AWS Lambda
      uses: appleboy/lambda-action@v0.2.0
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_SECRET_REGION }}
        function_name: estate-doc-flow-get-document
        zip_file: ./Document.Get.zip
        
    - name: Build and Publish Document.Delete
      run: |
        cd Document.Delete/src/Document.Delete
        dotnet build --configuration Release --no-restore
        dotnet publish --configuration Release --output ./publish
        cd publish
        zip -r Document.Delete.zip .
        mv Document.Get.zip ../../../../Document.Delete.zip

    - name: Deploy Document.Delete to AWS Lambda
      uses: appleboy/lambda-action@v0.2.0
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_SECRET_REGION }}
        function_name: estate-doc-flow-delete-document
        zip_file: ./Document.Delete.zip